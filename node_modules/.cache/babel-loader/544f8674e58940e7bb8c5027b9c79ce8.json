{"ast":null,"code":"var _jsxFileName = \"/Users/julie/Documents/Code/gta-languages/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\"; //.filter(r => r.TEXT_NAME_NOM.includes(\"Korean\"));\n\nfunction App() {\n  const [stuff, setStuff] = useState([]);\n\n  function fetchData() {\n    fetch(\"https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&topic=10&dguid=2016A00053520005\", {\n      mode: \"no-cors\"\n    }).then(response => response.text().then(text => {\n      debugger;\n      let jsonFile = JSON.parse(text.slice(2)); //jsonFile.DATA is an array of arrays. Each array has 19 values (corresponding with jsonFile.columns)\n      //after this map, there will be an array of objects.\n      //there will be one array with 800+ objects. Each object has 19 keys/values\n\n      let jsonObject = jsonFile.DATA.map(rowArr => rowArr.reduce((rowObject, value, i) => ({ ...rowObject,\n        [jsonFile.COLUMNS[i]]: value\n      }), {}));\n      setStuff(jsonObject);\n    }));\n  }\n\n  if (stuff.length === 0) {\n    fetchData();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"This thing\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, JSON.stringify(stuff)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/julie/Documents/Code/gta-languages/src/App.js"],"names":["React","useState","App","stuff","setStuff","fetchData","fetch","mode","then","response","text","jsonFile","JSON","parse","slice","jsonObject","DATA","map","rowArr","reduce","rowObject","value","i","COLUMNS","length","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CAEA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASI,SAAT,GAAqB;AACnBC,IAAAA,KAAK,CACH,yGADG,EAEH;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAFG,CAAL,CAGEC,IAHF,CAGOC,QAAQ,IACbA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AAC3B;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAX,CAAf,CAF2B,CAG3B;AACA;AACA;;AACA,UAAIC,UAAU,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,GAAd,CAAkBC,MAAM,IACvCA,MAAM,CAACC,MAAP,CACE,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,CAAnB,MAA0B,EACxB,GAAGF,SADqB;AAExB,SAACT,QAAQ,CAACY,OAAT,CAAiBD,CAAjB,CAAD,GAAuBD;AAFC,OAA1B,CADF,EAKE,EALF,CADe,CAAjB;AASAjB,MAAAA,QAAQ,CAACW,UAAD,CAAR;AACD,KAhBD,CAJF;AAsBD;;AAED,MAAIZ,KAAK,CAACqB,MAAN,KAAiB,CAArB,EAAwB;AACtBnB,IAAAA,SAAS;AACV;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,IAAI,CAACa,SAAL,CAAetB,KAAf,CAAL,CAFF,CADF;AAMD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\n//.filter(r => r.TEXT_NAME_NOM.includes(\"Korean\"));\n\nfunction App() {\n  const [stuff, setStuff] = useState([]);\n\n  function fetchData() {\n    fetch(\n      \"https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&topic=10&dguid=2016A00053520005\",\n      { mode: \"no-cors\" }\n    ).then(response =>\n      response.text().then(text => {\n        debugger;\n        let jsonFile = JSON.parse(text.slice(2));\n        //jsonFile.DATA is an array of arrays. Each array has 19 values (corresponding with jsonFile.columns)\n        //after this map, there will be an array of objects.\n        //there will be one array with 800+ objects. Each object has 19 keys/values\n        let jsonObject = jsonFile.DATA.map(rowArr =>\n          rowArr.reduce(\n            (rowObject, value, i) => ({\n              ...rowObject,\n              [jsonFile.COLUMNS[i]]: value\n            }),\n            {}\n          )\n        );\n        setStuff(jsonObject);\n      })\n    );\n  }\n\n  if (stuff.length === 0) {\n    fetchData();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>This thing</h1>\n      <h3>{JSON.stringify(stuff)}</h3>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}