{"ast":null,"code":"var _jsxFileName = \"/Users/julie/Documents/Code/gta-languages/react_app/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport TorontoData from \"./Toronto.json\"; //0: mother tongue\n//1: spoken at home\n//2: total speakers of this language (including those not included in 0 & 1)\n\nfunction App() {\n  const [selectedLanguage, setLanguage] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"The # of speakers of a non-official (Eng/Fr) language in Toronto\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setLanguage(e.target.value.toLowerCase()),\n    placeholder: \"type language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Mother tongue for the total population excluding institutional residents :\", \" \", TorontoData.filter(d => !d.TEXT_NAME_NOM.includes(\"English\" || \"French\")).filter(d => d.TEXT_NAME_NOM.toLowerCase().includes(selectedLanguage)).map(d => ({\n    total: d.T_DATA_DONNEE,\n    ID: d.HIER_ID\n  })).join(\",\") //.map(d => d.HIER_ID )\n  //.reduce((a, n) => a + n, 0)\n  ));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/julie/Documents/Code/gta-languages/react_app/src/App.js"],"names":["React","useState","TorontoData","App","selectedLanguage","setLanguage","e","target","value","toLowerCase","filter","d","TEXT_NAME_NOM","includes","map","total","T_DATA_DONNEE","ID","HIER_ID","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,gBAAD,EAAmBC,WAAnB,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADF,eAEE;AACE,IAAA,QAAQ,EAAEK,CAAC,IAAID,WAAW,CAACC,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD,CAD5B;AAEE,IAAA,WAAW,EAAC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAEI,GAFJ,EAGGP,WAAW,CAACQ,MAAZ,CACCC,CAAC,IAAI,CAACA,CAAC,CAACC,aAAF,CAAgBC,QAAhB,CAAyB,aAAa,QAAtC,CADP,EAGEH,MAHF,CAGSC,CAAC,IAAIA,CAAC,CAACC,aAAF,CAAgBH,WAAhB,GAA8BI,QAA9B,CAAuCT,gBAAvC,CAHd,EAIEU,GAJF,CAIMH,CAAC,KAAK;AAAEI,IAAAA,KAAK,EAAEJ,CAAC,CAACK,aAAX;AAA0BC,IAAAA,EAAE,EAAEN,CAAC,CAACO;AAAhC,GAAL,CAJP,EAKEC,IALF,CAKO,GALP,CAHH,CAQe;AACb;AATF,GANF,CADF;AAqBD;;AAED,eAAehB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TorontoData from \"./Toronto.json\";\n\n//0: mother tongue\n//1: spoken at home\n//2: total speakers of this language (including those not included in 0 & 1)\n\nfunction App() {\n  const [selectedLanguage, setLanguage] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <h1>The # of speakers of a non-official (Eng/Fr) language in Toronto</h1>\n      <input\n        onChange={e => setLanguage(e.target.value.toLowerCase())}\n        placeholder=\"type language\"\n      ></input>\n      <div>\n        Mother tongue for the total population excluding institutional residents\n        :{\" \"}\n        {TorontoData.filter(\n          d => !d.TEXT_NAME_NOM.includes(\"English\" || \"French\")\n        )\n          .filter(d => d.TEXT_NAME_NOM.toLowerCase().includes(selectedLanguage))\n          .map(d => ({ total: d.T_DATA_DONNEE, ID: d.HIER_ID }))\n          .join(\",\") //.map(d => d.HIER_ID )\n        //.reduce((a, n) => a + n, 0)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}