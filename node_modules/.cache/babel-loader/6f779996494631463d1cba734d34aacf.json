{"ast":null,"code":"var _jsxFileName = \"/Users/julie/Documents/Code/gta-languages/react_app/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport TorontoData from \"./Toronto.json\"; //.filter(r => r.TEXT_NAME_NOM.includes(\"Korean\"));\n\nfunction App() {\n  const [selectedLanguage, setLanguage] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"This thing is very rude\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setLanguage(e.target.value),\n    placeholder: \"type language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Number:\", \" \", TorontoData.filter(d => d.TEXT_NAME_NOM.includes(selectedLanguage)).map(d => d.TEXT_NAME_NOM)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, JSON.stringify(TorontoData)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/julie/Documents/Code/gta-languages/react_app/src/App.js"],"names":["React","useState","TorontoData","App","selectedLanguage","setLanguage","e","target","value","filter","d","TEXT_NAME_NOM","includes","map","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,gBAAD,EAAmBC,WAAnB,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AACE,IAAA,QAAQ,EAAEK,CAAC,IAAID,WAAW,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAD5B;AAEE,IAAA,WAAW,EAAC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACU,GADV,EAEGN,WAAW,CAACO,MAAZ,CAAmBC,CAAC,IACnBA,CAAC,CAACC,aAAF,CAAgBC,QAAhB,CAAyBR,gBAAzB,CADD,EAECS,GAFD,CAEKH,CAAC,IAAIA,CAAC,CAACC,aAFZ,CAFH,CANF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,IAAI,CAACC,SAAL,CAAeb,WAAf,CAAJ,CAZF,CADF;AAgBD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TorontoData from \"./Toronto.json\";\n\n//.filter(r => r.TEXT_NAME_NOM.includes(\"Korean\"));\n\nfunction App() {\n  const [selectedLanguage, setLanguage] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <h1>This thing is very rude</h1>\n      <input\n        onChange={e => setLanguage(e.target.value)}\n        placeholder=\"type language\"\n      ></input>\n      <div>\n        Number:{\" \"}\n        {TorontoData.filter(d =>\n          d.TEXT_NAME_NOM.includes(selectedLanguage)\n        ).map(d => d.TEXT_NAME_NOM)}\n      </div>\n      <p>{JSON.stringify(TorontoData)}</p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}